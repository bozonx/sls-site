{
  "version": 3,
  "sources": ["../../../worker.js"],
  "sourceRoot": "/mnt/disk2/workspace/sls-site/.wrangler/tmp/deploy-O4AxcG",
  "sourcesContent": ["// \u0412\u043E\u0440\u043A\u0435\u0440 \u0434\u043B\u044F \u0440\u0430\u0437\u0434\u0430\u0447\u0438 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438\u0445 \u0444\u0430\u0439\u043B\u043E\u0432 VitePress \u0438\u0437 \u043A\u0430\u0442\u0430\u043B\u043E\u0433\u0430 `src/.vitepress/dist`\n// \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F \u043D\u0430\u0442\u0438\u0432\u043D\u0430\u044F \u043F\u0440\u0438\u0432\u044F\u0437\u043A\u0430 \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438\u0445 \u0430\u0441\u0441\u0435\u0442\u043E\u0432 Cloudflare Workers \u0447\u0435\u0440\u0435\u0437 binding `ASSETS`\n\nexport default {\n  /**\n   * \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u0447\u0438\u043A \u0437\u0430\u043F\u0440\u043E\u0441\u043E\u0432 \u0432\u043E\u0440\u043A\u0435\u0440\u0430\n   * - \u041F\u044B\u0442\u0430\u0435\u0442\u0441\u044F \u043E\u0442\u0434\u0430\u0442\u044C \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438\u0439 \u0444\u0430\u0439\u043B \u0438\u0437 `ASSETS`\n   * - \u0415\u0441\u043B\u0438 \u0444\u0430\u0439\u043B \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D, \u043F\u0440\u043E\u0431\u0443\u0435\u0442 \u0432\u0435\u0440\u043D\u0443\u0442\u044C `404.html` \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C 404\n   */\n  async fetch(request, env) {\n    // \u041E\u0442\u0434\u0430\u0451\u043C \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438\u0435 \u0444\u0430\u0439\u043B\u044B \u0438\u0437 \u043F\u0440\u0438\u0432\u044F\u0437\u043A\u0438 \u0430\u0441\u0441\u0435\u0442\u043E\u0432\n    const assetResponse = await env.ASSETS.fetch(request);\n    if (assetResponse && assetResponse.status !== 404) {\n      return assetResponse;\n    }\n\n    // \u0424\u0430\u0439\u043B \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D \u2014 \u043F\u0440\u043E\u0431\u0443\u0435\u043C \u0432\u0435\u0440\u043D\u0443\u0442\u044C \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0443\u044E \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0443 404\n    const url = new URL(request.url);\n    const notFoundRequest = new Request(new URL(\"/404.html\", url.origin), {\n      headers: request.headers,\n      method: \"GET\",\n    });\n\n    const notFoundResponse = await env.ASSETS.fetch(notFoundRequest);\n    if (notFoundResponse && notFoundResponse.status === 200) {\n      // \u0412\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043C \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u043C\u043E\u0435 404.html, \u043D\u043E \u0441\u043E \u0441\u0442\u0430\u0442\u0443\u0441\u043E\u043C 404\n      return new Response(notFoundResponse.body, {\n        status: 404,\n        headers: notFoundResponse.headers,\n      });\n    }\n\n    return new Response(\"Not found\", { status: 404 });\n  },\n};\n"],
  "mappings": ";AAGA,IAAO,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMb,MAAM,MAAM,SAAS,KAAK;AAExB,UAAM,gBAAgB,MAAM,IAAI,OAAO,MAAM,OAAO;AACpD,QAAI,iBAAiB,cAAc,WAAW,KAAK;AACjD,aAAO;AAAA,IACT;AAGA,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,kBAAkB,IAAI,QAAQ,IAAI,IAAI,aAAa,IAAI,MAAM,GAAG;AAAA,MACpE,SAAS,QAAQ;AAAA,MACjB,QAAQ;AAAA,IACV,CAAC;AAED,UAAM,mBAAmB,MAAM,IAAI,OAAO,MAAM,eAAe;AAC/D,QAAI,oBAAoB,iBAAiB,WAAW,KAAK;AAEvD,aAAO,IAAI,SAAS,iBAAiB,MAAM;AAAA,QACzC,QAAQ;AAAA,QACR,SAAS,iBAAiB;AAAA,MAC5B,CAAC;AAAA,IACH;AAEA,WAAO,IAAI,SAAS,aAAa,EAAE,QAAQ,IAAI,CAAC;AAAA,EAClD;AACF;",
  "names": []
}
